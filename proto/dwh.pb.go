// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dwh.proto

package sonm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// grpccmd imports
import (
	"io"

	"github.com/spf13/cobra"
	"github.com/sshaman1101/grpccmd"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ComparisonOperator int32

const (
	ComparisonOperator_EQ  ComparisonOperator = 0
	ComparisonOperator_GTE ComparisonOperator = 1
	ComparisonOperator_LTE ComparisonOperator = 2
)

var ComparisonOperator_name = map[int32]string{
	0: "EQ",
	1: "GTE",
	2: "LTE",
}
var ComparisonOperator_value = map[string]int32{
	"EQ":  0,
	"GTE": 1,
	"LTE": 2,
}

func (x ComparisonOperator) String() string {
	return proto.EnumName(ComparisonOperator_name, int32(x))
}
func (ComparisonOperator) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type OrdersListRequest struct {
	Type             OrderType          `protobuf:"varint,1,opt,name=type,enum=sonm.OrderType" json:"type,omitempty"`
	AuthorID         string             `protobuf:"bytes,2,opt,name=authorID" json:"authorID,omitempty"`
	CounterAgentID   string             `protobuf:"bytes,3,opt,name=counterAgentID" json:"counterAgentID,omitempty"`
	DurationSeconds  uint64             `protobuf:"varint,4,opt,name=durationSeconds" json:"durationSeconds,omitempty"`
	DurationOperator ComparisonOperator `protobuf:"varint,5,opt,name=durationOperator,enum=sonm.ComparisonOperator" json:"durationOperator,omitempty"`
	Price            uint64             `protobuf:"varint,6,opt,name=price" json:"price,omitempty"`
	PriceOperator    ComparisonOperator `protobuf:"varint,7,opt,name=priceOperator,enum=sonm.ComparisonOperator" json:"priceOperator,omitempty"`
	CpuCount         uint64             `protobuf:"varint,8,opt,name=cpuCount" json:"cpuCount,omitempty"`
	GpuCount         uint64             `protobuf:"varint,9,opt,name=gpuCount" json:"gpuCount,omitempty"`
	RamBytes         uint64             `protobuf:"varint,10,opt,name=ramBytes" json:"ramBytes,omitempty"`
	Limit            uint64             `protobuf:"varint,11,opt,name=limit" json:"limit,omitempty"`
	Offset           uint64             `protobuf:"varint,12,opt,name=offset" json:"offset,omitempty"`
}

func (m *OrdersListRequest) Reset()                    { *m = OrdersListRequest{} }
func (m *OrdersListRequest) String() string            { return proto.CompactTextString(m) }
func (*OrdersListRequest) ProtoMessage()               {}
func (*OrdersListRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *OrdersListRequest) GetType() OrderType {
	if m != nil {
		return m.Type
	}
	return OrderType_ANY
}

func (m *OrdersListRequest) GetAuthorID() string {
	if m != nil {
		return m.AuthorID
	}
	return ""
}

func (m *OrdersListRequest) GetCounterAgentID() string {
	if m != nil {
		return m.CounterAgentID
	}
	return ""
}

func (m *OrdersListRequest) GetDurationSeconds() uint64 {
	if m != nil {
		return m.DurationSeconds
	}
	return 0
}

func (m *OrdersListRequest) GetDurationOperator() ComparisonOperator {
	if m != nil {
		return m.DurationOperator
	}
	return ComparisonOperator_EQ
}

func (m *OrdersListRequest) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrdersListRequest) GetPriceOperator() ComparisonOperator {
	if m != nil {
		return m.PriceOperator
	}
	return ComparisonOperator_EQ
}

func (m *OrdersListRequest) GetCpuCount() uint64 {
	if m != nil {
		return m.CpuCount
	}
	return 0
}

func (m *OrdersListRequest) GetGpuCount() uint64 {
	if m != nil {
		return m.GpuCount
	}
	return 0
}

func (m *OrdersListRequest) GetRamBytes() uint64 {
	if m != nil {
		return m.RamBytes
	}
	return 0
}

func (m *OrdersListRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *OrdersListRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type OrdersListReply struct {
	Orders []*Order `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *OrdersListReply) Reset()                    { *m = OrdersListReply{} }
func (m *OrdersListReply) String() string            { return proto.CompactTextString(m) }
func (*OrdersListReply) ProtoMessage()               {}
func (*OrdersListReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *OrdersListReply) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type DealsListRequest struct {
	Status           DealStatus         `protobuf:"varint,3,opt,name=status,enum=sonm.DealStatus" json:"status,omitempty"`
	SupplierID       string             `protobuf:"bytes,1,opt,name=supplierID" json:"supplierID,omitempty"`
	ConsumerID       string             `protobuf:"bytes,2,opt,name=consumerID" json:"consumerID,omitempty"`
	DurationSeconds  uint64             `protobuf:"varint,4,opt,name=durationSeconds" json:"durationSeconds,omitempty"`
	DurationOperator ComparisonOperator `protobuf:"varint,5,opt,name=durationOperator,enum=sonm.ComparisonOperator" json:"durationOperator,omitempty"`
	Price            uint64             `protobuf:"varint,6,opt,name=price" json:"price,omitempty"`
	PriceOperator    ComparisonOperator `protobuf:"varint,7,opt,name=priceOperator,enum=sonm.ComparisonOperator" json:"priceOperator,omitempty"`
	Limit            uint64             `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
	Offset           uint64             `protobuf:"varint,9,opt,name=offset" json:"offset,omitempty"`
}

func (m *DealsListRequest) Reset()                    { *m = DealsListRequest{} }
func (m *DealsListRequest) String() string            { return proto.CompactTextString(m) }
func (*DealsListRequest) ProtoMessage()               {}
func (*DealsListRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *DealsListRequest) GetStatus() DealStatus {
	if m != nil {
		return m.Status
	}
	return DealStatus_ANY_STATUS
}

func (m *DealsListRequest) GetSupplierID() string {
	if m != nil {
		return m.SupplierID
	}
	return ""
}

func (m *DealsListRequest) GetConsumerID() string {
	if m != nil {
		return m.ConsumerID
	}
	return ""
}

func (m *DealsListRequest) GetDurationSeconds() uint64 {
	if m != nil {
		return m.DurationSeconds
	}
	return 0
}

func (m *DealsListRequest) GetDurationOperator() ComparisonOperator {
	if m != nil {
		return m.DurationOperator
	}
	return ComparisonOperator_EQ
}

func (m *DealsListRequest) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *DealsListRequest) GetPriceOperator() ComparisonOperator {
	if m != nil {
		return m.PriceOperator
	}
	return ComparisonOperator_EQ
}

func (m *DealsListRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DealsListRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DealsListReply struct {
	Deals []*Deal `protobuf:"bytes,1,rep,name=deals" json:"deals,omitempty"`
}

func (m *DealsListReply) Reset()                    { *m = DealsListReply{} }
func (m *DealsListReply) String() string            { return proto.CompactTextString(m) }
func (*DealsListReply) ProtoMessage()               {}
func (*DealsListReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *DealsListReply) GetDeals() []*Deal {
	if m != nil {
		return m.Deals
	}
	return nil
}

type DealChangeRequestsReply struct {
	ChangeRequests []*DealChangeRequest `protobuf:"bytes,1,rep,name=changeRequests" json:"changeRequests,omitempty"`
}

func (m *DealChangeRequestsReply) Reset()                    { *m = DealChangeRequestsReply{} }
func (m *DealChangeRequestsReply) String() string            { return proto.CompactTextString(m) }
func (*DealChangeRequestsReply) ProtoMessage()               {}
func (*DealChangeRequestsReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *DealChangeRequestsReply) GetChangeRequests() []*DealChangeRequest {
	if m != nil {
		return m.ChangeRequests
	}
	return nil
}

type DealChangeRequest struct {
	DurationSeconds uint64  `protobuf:"varint,1,opt,name=durationSeconds" json:"durationSeconds,omitempty"`
	Price           *BigInt `protobuf:"bytes,2,opt,name=price" json:"price,omitempty"`
}

func (m *DealChangeRequest) Reset()                    { *m = DealChangeRequest{} }
func (m *DealChangeRequest) String() string            { return proto.CompactTextString(m) }
func (*DealChangeRequest) ProtoMessage()               {}
func (*DealChangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *DealChangeRequest) GetDurationSeconds() uint64 {
	if m != nil {
		return m.DurationSeconds
	}
	return 0
}

func (m *DealChangeRequest) GetPrice() *BigInt {
	if m != nil {
		return m.Price
	}
	return nil
}

func init() {
	proto.RegisterType((*OrdersListRequest)(nil), "sonm.OrdersListRequest")
	proto.RegisterType((*OrdersListReply)(nil), "sonm.OrdersListReply")
	proto.RegisterType((*DealsListRequest)(nil), "sonm.DealsListRequest")
	proto.RegisterType((*DealsListReply)(nil), "sonm.DealsListReply")
	proto.RegisterType((*DealChangeRequestsReply)(nil), "sonm.DealChangeRequestsReply")
	proto.RegisterType((*DealChangeRequest)(nil), "sonm.DealChangeRequest")
	proto.RegisterEnum("sonm.ComparisonOperator", ComparisonOperator_name, ComparisonOperator_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DWH service

type DWHClient interface {
	GetOrdersList(ctx context.Context, in *OrdersListRequest, opts ...grpc.CallOption) (*OrdersListReply, error)
	GetOrderDetails(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Order, error)
	GetDealsList(ctx context.Context, in *DealsListRequest, opts ...grpc.CallOption) (*DealsListReply, error)
	GetDealDetails(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Deal, error)
	GetDealChangeRequests(ctx context.Context, in *ID, opts ...grpc.CallOption) (*DealChangeRequestsReply, error)
}

type dWHClient struct {
	cc *grpc.ClientConn
}

func NewDWHClient(cc *grpc.ClientConn) DWHClient {
	return &dWHClient{cc}
}

func (c *dWHClient) GetOrdersList(ctx context.Context, in *OrdersListRequest, opts ...grpc.CallOption) (*OrdersListReply, error) {
	out := new(OrdersListReply)
	err := grpc.Invoke(ctx, "/sonm.DWH/GetOrdersList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dWHClient) GetOrderDetails(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := grpc.Invoke(ctx, "/sonm.DWH/GetOrderDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dWHClient) GetDealsList(ctx context.Context, in *DealsListRequest, opts ...grpc.CallOption) (*DealsListReply, error) {
	out := new(DealsListReply)
	err := grpc.Invoke(ctx, "/sonm.DWH/GetDealsList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dWHClient) GetDealDetails(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Deal, error) {
	out := new(Deal)
	err := grpc.Invoke(ctx, "/sonm.DWH/GetDealDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dWHClient) GetDealChangeRequests(ctx context.Context, in *ID, opts ...grpc.CallOption) (*DealChangeRequestsReply, error) {
	out := new(DealChangeRequestsReply)
	err := grpc.Invoke(ctx, "/sonm.DWH/GetDealChangeRequests", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DWH service

type DWHServer interface {
	GetOrdersList(context.Context, *OrdersListRequest) (*OrdersListReply, error)
	GetOrderDetails(context.Context, *ID) (*Order, error)
	GetDealsList(context.Context, *DealsListRequest) (*DealsListReply, error)
	GetDealDetails(context.Context, *ID) (*Deal, error)
	GetDealChangeRequests(context.Context, *ID) (*DealChangeRequestsReply, error)
}

func RegisterDWHServer(s *grpc.Server, srv DWHServer) {
	s.RegisterService(&_DWH_serviceDesc, srv)
}

func _DWH_GetOrdersList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DWHServer).GetOrdersList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonm.DWH/GetOrdersList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DWHServer).GetOrdersList(ctx, req.(*OrdersListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DWH_GetOrderDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DWHServer).GetOrderDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonm.DWH/GetOrderDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DWHServer).GetOrderDetails(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _DWH_GetDealsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DealsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DWHServer).GetDealsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonm.DWH/GetDealsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DWHServer).GetDealsList(ctx, req.(*DealsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DWH_GetDealDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DWHServer).GetDealDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonm.DWH/GetDealDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DWHServer).GetDealDetails(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _DWH_GetDealChangeRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DWHServer).GetDealChangeRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonm.DWH/GetDealChangeRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DWHServer).GetDealChangeRequests(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _DWH_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sonm.DWH",
	HandlerType: (*DWHServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrdersList",
			Handler:    _DWH_GetOrdersList_Handler,
		},
		{
			MethodName: "GetOrderDetails",
			Handler:    _DWH_GetOrderDetails_Handler,
		},
		{
			MethodName: "GetDealsList",
			Handler:    _DWH_GetDealsList_Handler,
		},
		{
			MethodName: "GetDealDetails",
			Handler:    _DWH_GetDealDetails_Handler,
		},
		{
			MethodName: "GetDealChangeRequests",
			Handler:    _DWH_GetDealChangeRequests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dwh.proto",
}

// Begin grpccmd
var _ = grpccmd.RunE

// DWH
var _DWHCmd = &cobra.Command{
	Use:   "dWH [method]",
	Short: "Subcommand for the DWH service.",
}

var _DWH_GetOrdersListCmd = &cobra.Command{
	Use:   "getOrdersList",
	Short: "Make the GetOrdersList method call, input-type: sonm.OrdersListRequest output-type: sonm.OrdersListReply",
	RunE: grpccmd.RunE(
		"GetOrdersList",
		"sonm.OrdersListRequest",
		func(c io.Closer) interface{} {
			cc := c.(*grpc.ClientConn)
			return NewDWHClient(cc)
		},
	),
}

var _DWH_GetOrdersListCmd_gen = &cobra.Command{
	Use:   "getOrdersList-gen",
	Short: "Generate JSON for method call of GetOrdersList (input-type: sonm.OrdersListRequest)",
	RunE:  grpccmd.TypeToJson("sonm.OrdersListRequest"),
}

var _DWH_GetOrderDetailsCmd = &cobra.Command{
	Use:   "getOrderDetails",
	Short: "Make the GetOrderDetails method call, input-type: sonm.ID output-type: sonm.Order",
	RunE: grpccmd.RunE(
		"GetOrderDetails",
		"sonm.ID",
		func(c io.Closer) interface{} {
			cc := c.(*grpc.ClientConn)
			return NewDWHClient(cc)
		},
	),
}

var _DWH_GetOrderDetailsCmd_gen = &cobra.Command{
	Use:   "getOrderDetails-gen",
	Short: "Generate JSON for method call of GetOrderDetails (input-type: sonm.ID)",
	RunE:  grpccmd.TypeToJson("sonm.ID"),
}

var _DWH_GetDealsListCmd = &cobra.Command{
	Use:   "getDealsList",
	Short: "Make the GetDealsList method call, input-type: sonm.DealsListRequest output-type: sonm.DealsListReply",
	RunE: grpccmd.RunE(
		"GetDealsList",
		"sonm.DealsListRequest",
		func(c io.Closer) interface{} {
			cc := c.(*grpc.ClientConn)
			return NewDWHClient(cc)
		},
	),
}

var _DWH_GetDealsListCmd_gen = &cobra.Command{
	Use:   "getDealsList-gen",
	Short: "Generate JSON for method call of GetDealsList (input-type: sonm.DealsListRequest)",
	RunE:  grpccmd.TypeToJson("sonm.DealsListRequest"),
}

var _DWH_GetDealDetailsCmd = &cobra.Command{
	Use:   "getDealDetails",
	Short: "Make the GetDealDetails method call, input-type: sonm.ID output-type: sonm.Deal",
	RunE: grpccmd.RunE(
		"GetDealDetails",
		"sonm.ID",
		func(c io.Closer) interface{} {
			cc := c.(*grpc.ClientConn)
			return NewDWHClient(cc)
		},
	),
}

var _DWH_GetDealDetailsCmd_gen = &cobra.Command{
	Use:   "getDealDetails-gen",
	Short: "Generate JSON for method call of GetDealDetails (input-type: sonm.ID)",
	RunE:  grpccmd.TypeToJson("sonm.ID"),
}

var _DWH_GetDealChangeRequestsCmd = &cobra.Command{
	Use:   "getDealChangeRequests",
	Short: "Make the GetDealChangeRequests method call, input-type: sonm.ID output-type: sonm.DealChangeRequestsReply",
	RunE: grpccmd.RunE(
		"GetDealChangeRequests",
		"sonm.ID",
		func(c io.Closer) interface{} {
			cc := c.(*grpc.ClientConn)
			return NewDWHClient(cc)
		},
	),
}

var _DWH_GetDealChangeRequestsCmd_gen = &cobra.Command{
	Use:   "getDealChangeRequests-gen",
	Short: "Generate JSON for method call of GetDealChangeRequests (input-type: sonm.ID)",
	RunE:  grpccmd.TypeToJson("sonm.ID"),
}

// Register commands with the root command and service command
func init() {
	grpccmd.RegisterServiceCmd(_DWHCmd)
	_DWHCmd.AddCommand(
		_DWH_GetOrdersListCmd,
		_DWH_GetOrdersListCmd_gen,
		_DWH_GetOrderDetailsCmd,
		_DWH_GetOrderDetailsCmd_gen,
		_DWH_GetDealsListCmd,
		_DWH_GetDealsListCmd_gen,
		_DWH_GetDealDetailsCmd,
		_DWH_GetDealDetailsCmd_gen,
		_DWH_GetDealChangeRequestsCmd,
		_DWH_GetDealChangeRequestsCmd_gen,
	)
}

// End grpccmd

func init() { proto.RegisterFile("dwh.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x94, 0xdf, 0x6a, 0xdb, 0x3e,
	0x14, 0xc7, 0xe3, 0x24, 0x4d, 0x93, 0x93, 0x34, 0x49, 0x45, 0xff, 0x88, 0xc0, 0xef, 0x47, 0x70,
	0x61, 0x98, 0x5e, 0xe4, 0xc2, 0x83, 0x5d, 0x76, 0xb4, 0x75, 0xe9, 0x02, 0x85, 0x32, 0xb7, 0x30,
	0xd8, 0x9d, 0x6a, 0xab, 0xae, 0xc0, 0xb1, 0x3c, 0x4b, 0x66, 0xe4, 0x75, 0xf6, 0x2c, 0x7b, 0xa0,
	0x3d, 0xc2, 0x90, 0x64, 0xc7, 0x76, 0xdd, 0xb1, 0xfb, 0xdd, 0xe9, 0x7c, 0xbf, 0xe7, 0x8f, 0x72,
	0x3e, 0x72, 0x60, 0x14, 0x7e, 0x7f, 0x59, 0xa5, 0x19, 0x97, 0x1c, 0xf5, 0x05, 0x4f, 0x36, 0x8b,
	0xc9, 0x13, 0x8b, 0x58, 0x22, 0x8d, 0xb6, 0x80, 0x90, 0x92, 0xb8, 0x38, 0xcf, 0x58, 0xa2, 0x32,
	0x12, 0x46, 0x0a, 0x61, 0xf4, 0xc4, 0x42, 0x73, 0xb4, 0x7f, 0xf6, 0xe0, 0xf0, 0x3e, 0x0b, 0x69,
	0x26, 0xee, 0x98, 0x90, 0x3e, 0xfd, 0x96, 0x53, 0x21, 0xd1, 0x19, 0xf4, 0xe5, 0x36, 0xa5, 0xd8,
	0x5a, 0x5a, 0xce, 0xd4, 0x9d, 0xad, 0x54, 0xf9, 0x4a, 0xa7, 0x3d, 0x6e, 0x53, 0xea, 0x6b, 0x13,
	0x2d, 0x60, 0x48, 0x72, 0xf9, 0xc2, 0xb3, 0xb5, 0x87, 0xbb, 0x4b, 0xcb, 0x19, 0xf9, 0xbb, 0x18,
	0xbd, 0x83, 0x69, 0xc0, 0xf3, 0x44, 0xd2, 0xec, 0x32, 0xa2, 0x89, 0x5c, 0x7b, 0xb8, 0xa7, 0x33,
	0x5e, 0xa9, 0xc8, 0x81, 0x59, 0x98, 0x67, 0x44, 0x32, 0x9e, 0x3c, 0xd0, 0x80, 0x27, 0xa1, 0xc0,
	0xfd, 0xa5, 0xe5, 0xf4, 0xfd, 0xd7, 0x32, 0xf2, 0x60, 0x5e, 0x4a, 0xf7, 0x29, 0xcd, 0x88, 0xe4,
	0x19, 0xde, 0xd3, 0xd7, 0xc3, 0xe6, 0x7a, 0xd7, 0x7c, 0x93, 0x92, 0x8c, 0x89, 0xca, 0xf7, 0x5b,
	0x15, 0xe8, 0x08, 0xf6, 0xd2, 0x8c, 0x05, 0x14, 0x0f, 0xf4, 0x14, 0x13, 0xa0, 0x0b, 0x38, 0xd0,
	0x87, 0x5d, 0xe3, 0xfd, 0xbf, 0x34, 0x6e, 0xa6, 0xab, 0x4d, 0x04, 0x69, 0x7e, 0xad, 0x7e, 0x1a,
	0x1e, 0xea, 0xc6, 0xbb, 0x58, 0x79, 0x51, 0xe9, 0x8d, 0x8c, 0x17, 0xd5, 0xbc, 0x8c, 0x6c, 0xae,
	0xb6, 0x92, 0x0a, 0x0c, 0xc6, 0x2b, 0x63, 0x75, 0xd3, 0x98, 0x6d, 0x98, 0xc4, 0x63, 0x73, 0x53,
	0x1d, 0xa0, 0x13, 0x18, 0xf0, 0xe7, 0x67, 0x41, 0x25, 0x9e, 0x68, 0xb9, 0x88, 0xec, 0x0f, 0x30,
	0xab, 0x53, 0x4c, 0xe3, 0x2d, 0x3a, 0x83, 0x01, 0xd7, 0x12, 0xb6, 0x96, 0x3d, 0x67, 0xec, 0x8e,
	0x6b, 0x14, 0xfd, 0xc2, 0xb2, 0x7f, 0x75, 0x61, 0xee, 0x51, 0x12, 0x37, 0xe8, 0x3b, 0x30, 0x10,
	0x92, 0xc8, 0x5c, 0x68, 0x68, 0x53, 0x77, 0x6e, 0x2a, 0x55, 0xde, 0x83, 0xd6, 0xfd, 0xc2, 0x47,
	0xff, 0x03, 0x88, 0x3c, 0x4d, 0x63, 0x46, 0xd5, 0x23, 0xb0, 0x34, 0xe2, 0x9a, 0xa2, 0xfc, 0x80,
	0x27, 0x22, 0xdf, 0xd0, 0xea, 0x91, 0xd4, 0x94, 0x7f, 0x04, 0xff, 0x0e, 0xd5, 0xf0, 0x6d, 0x54,
	0xa3, 0x06, 0x2a, 0x17, 0xa6, 0xb5, 0x8d, 0x2b, 0x52, 0x4b, 0xd8, 0x53, 0x5f, 0x6b, 0x09, 0x0a,
	0xaa, 0x75, 0xfb, 0xc6, 0xb0, 0xbf, 0xc2, 0xa9, 0x0a, 0xaf, 0x5f, 0x48, 0x12, 0xd1, 0x02, 0x93,
	0x30, 0xc5, 0x1f, 0x61, 0x1a, 0x34, 0xe4, 0xa2, 0xcb, 0x69, 0xd5, 0xa5, 0x51, 0xe6, 0xbf, 0x4a,
	0xb7, 0x09, 0x1c, 0xb6, 0x92, 0xde, 0x02, 0x63, 0xbd, 0x0d, 0xc6, 0x2e, 0x57, 0xaa, 0xe8, 0x8e,
	0xdd, 0x89, 0x19, 0x7b, 0xc5, 0xa2, 0x75, 0x22, 0x8b, 0x05, 0x9f, 0xaf, 0x00, 0xb5, 0xb7, 0x88,
	0x06, 0xd0, 0xbd, 0xf9, 0x3c, 0xef, 0xa0, 0x7d, 0xe8, 0xdd, 0x3e, 0xde, 0xcc, 0x2d, 0x75, 0xb8,
	0x7b, 0xbc, 0x99, 0x77, 0xdd, 0x1f, 0x5d, 0xe8, 0x79, 0x5f, 0x3e, 0xa1, 0x4b, 0x38, 0xb8, 0xa5,
	0xb2, 0x7a, 0xd8, 0xe8, 0xb4, 0xf6, 0x86, 0xeb, 0x4f, 0x76, 0x71, 0xdc, 0x36, 0xd2, 0x78, 0x6b,
	0x77, 0xd0, 0x39, 0xcc, 0xca, 0x16, 0x1e, 0x95, 0x84, 0xc5, 0x02, 0x0d, 0x4d, 0xee, 0xda, 0x5b,
	0xd4, 0x3f, 0x09, 0xbb, 0x83, 0x2e, 0x60, 0x72, 0x4b, 0xe5, 0x0e, 0x0e, 0x3a, 0xa9, 0x56, 0xd8,
	0x18, 0x76, 0xd4, 0xd2, 0xcd, 0x2c, 0x07, 0xa6, 0x45, 0x7d, 0x7b, 0x54, 0x0d, 0xaa, 0xdd, 0x41,
	0x57, 0x70, 0x5c, 0x64, 0x36, 0x91, 0xd6, 0x0a, 0xfe, 0xfb, 0x03, 0x3f, 0x51, 0x4c, 0x7b, 0x1a,
	0xe8, 0x3f, 0xf0, 0xf7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xba, 0x3e, 0x26, 0xd1, 0x09, 0x06,
	0x00, 0x00,
}
